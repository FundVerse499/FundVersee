type AdminError = variant {
  InvalidStatusTransition;
  InvalidInput : text;
  IdeaNotFound;
  NotAuthorized;
  AlreadyExists;
  InsufficientPermissions;
  ProjectNotFound;
  UserNotFound;
};
type ApproveRejectResult = record { id : nat64; status : IdeaStatus };
type Idea = record {
  id : nat64;
  status : IdeaStatus;
  title : text;
  submitted_at_ns : nat64;
  description : text;
  submitted_by : principal;
};
type IdeaStatus = variant {
  RequiresRevision;
  UnderReview;
  Approved;
  Rejected;
  Pending;
};
type Milestone = record {
  id : nat64;
  title : text;
  completed : bool;
  description : text;
  amount_e8s : nat64;
  due_date_ns : nat64;
};
type Project = record {
  id : nat64;
  business_registration : nat8;
  status : IdeaStatus;
  title : text;
  document_ids : vec nat64;
  submitted_at_ns : nat64;
  project_duration_days : nat32;
  description : text;
  idea_id : nat64;
  legal_entity : text;
  funding_goal_e8s : nat64;
  review_date_ns : opt nat64;
  contact_info : text;
  category : text;
  admin_notes : opt text;
  reviewer : opt principal;
  submitted_by : principal;
  milestones : vec Milestone;
};
type RegisteredUser = record {
  0 : principal;
  registered_at_ns : nat64;
  name : text;
  role : Role;
  email : text;
};
type Role = variant { Innovator; User; Admin };
service : {
  add_admin : (principal) -> (variant { Ok; Err : AdminError });
  add_innovator : (principal) -> (variant { Ok; Err : AdminError });
  approve_idea : (nat64) -> (
      variant { Ok : ApproveRejectResult; Err : AdminError },
    );
  get_idea : (nat64) -> (opt Idea) query;
  get_ideas : () -> (vec Idea) query;
  get_innovators : () -> (vec RegisteredUser) query;
  get_my_projects : () -> (vec Project) query;
  get_my_role : () -> (Role) query;
  get_project : (nat64) -> (opt Project) query;
  get_projects : () -> (vec Project) query;
  get_projects_by_status : (IdeaStatus) -> (vec Project) query;
  get_users : () -> (vec RegisteredUser) query;
  is_innovator_check : (principal) -> (bool) query;
  register_user : (text, text) -> (RegisteredUser);
  reject_idea : (nat64) -> (
      variant { Ok : ApproveRejectResult; Err : AdminError },
    );
  remove_admin : (principal) -> (variant { Ok; Err : AdminError });
  remove_innovator : (principal) -> (variant { Ok; Err : AdminError });
  review_project : (nat64, IdeaStatus, opt text) -> (
      variant { Ok : Project; Err : AdminError },
    );
  set_role : (principal, Role) -> (variant { Ok; Err : AdminError });
  submit_idea : (text, text) -> (variant { Ok : Idea; Err : AdminError });
  submit_project : (
      text,
      text,
      nat64,
      text,
      text,
      text,
      nat8,
      nat32,
      vec record { text; text; nat64; nat64 },
      vec nat64,
    ) -> (variant { Ok : Project; Err : AdminError });
}